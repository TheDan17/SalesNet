# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarCloud analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# Free for open source project.

# 1. Login to SonarCloud.io using your GitHub account

# 2. Import your project on SonarCloud
#     * Add your GitHub organization first, then add your repository as a new project.
#     * Please note that many languages are eligible for automatic analysis,
#       which means that the analysis will start automatically without the need to set up GitHub Actions.
#     * This behavior can be changed in Administration > Analysis Method.
#
# 3. Follow the SonarCloud in-product tutorial
#     * a. Copy/paste the Project Key and the Organization Key into the args parameter below
#          (You'll find this information in SonarCloud. Click on "Information" at the bottom left)
#
#     * b. Generate a new token and add it to your Github repository's secrets using the name SONAR_TOKEN
#          (On SonarCloud, click on your avatar on top-right > My account > Security
#           or go directly to https://sonarcloud.io/account/security/)

# Feel free to take a look at our documentation (https://docs.sonarcloud.io/getting-started/github/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/help/sc/9)
            - name: Setup Java - Gradle
  # You may pin to the exact commit or the version.
  # uses: yumemi-inc/setup-java-gradle@609d3e82f5bdceed0a156c2bba0fea9747f83ef6
  uses: yumemi-inc/setup-java-gradle@v2.0.0
  with:
    # Java version to use.
    java-version: # optional, default is 17
    # Java distribution to use.
    java-distribution: # optional, default is zulu
    # Whether to read/write Gradle cache.
    cache-disabled: # optional, default is false
    # Whether to only read Gradle cache.
    cache-read-only: # optional, default is true
    # Whether to remove stale/unused Gradle cache before writing.
    gradle-home-cache-cleanup: # optional, default is false
    # Whether to display Gradle build reports in Job Summaries.
    gradle-build-report: # optional, default is always
    # Whether to apply Kotlin compiler Problem Matchers.
    kotlin-compiler-report: # optional, default is true
          
